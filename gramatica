ROOT -> DECLARACIONES INSTRUCCIONES $

DECLARACIONES -> DECLARACION DECLARACIONES
DECLARACIONES -> epsilon

DECLARACION -> kw_proc id { PARAMETROS_DECL } { INSTRUCCIONES RET }

PARAMETROS_DECL -> PARAMETRO_DECL PARAMETROS_DECL
PARAMETROS_DECL -> epsilon

PARAMETRO_DECL -> { id }

RET -> kw_return ;
RET -> epsilon

INSTRUCCIONES -> INSTRUCCION INSTRUCCIONES
INSTRUCCIONES -> epsilon

INSTRUCCION -> kw_if IF ELSEIFS ELSE
IF -> { EXPRESSION } kw_then { INSTRUCCIONES }
ELSEIFS -> epsilon
ELSEIFS -> kw_elseif IF ELSEIFS
ELSE -> epsilon
ELSE -> kw_else { INSTRUCCIONES }

INSTRUCCION -> kw_while { EXPRESSION } { INSTRUCCIONES }
INSTRUCCION -> kw_gets kw_stdin ;
INSTRUCCION -> kw_puts EXPRESSION ;
INSTRUCCION -> EXPRESSION ;
INSTRUCCION -> kw_for { kw_set id INIT_FOR } { EXPRESSION } { kw_incr id ( token_integer ) } { INSTRUCCIONES }
INSTRUCCION -> kw_set id OPT_ARRAY_ACCESS EXPRESSION ;
INSTRUCCION -> kw_switch token_dollar id { CASES DEFAULT }

CASES -> epsilon
CASES -> CASE CASES

CASE -> kw_case token_integer { INSTRUCCIONES }

DEFAULT -> epsilon
DEFAULT -> kw_default { INSTRUCCIONES }

INIT_FOR -> token_integer
INIT_FOR -> token_dollar id OPT_ARRAY_ACCESS
INIT_FOR -> EXPRESSION

OPT_ARRAY_ACCESS -> ( EXPRESSION )
OPT_ARRAY_ACCESS -> epsilon


EXPRESSION -> id
EXPRESSION -> token_dollar id
EXPRESSION -> token_string
EXPRESSION -> FCALL
EXPRESSION -> token_integer
EXPRESSION -> token_double
FCALL -> [ id PARAMETROS ]

PARAMETROS -> epsilon
PARAMETROS -> PARAMETRO PARAMETROS

PARAMETRO -> { EXPRESSION }
