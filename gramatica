ROOT -> DECLARACIONES INSTRUCCIONES $

DECLARACIONES -> DECLARACION DECLARACIONES
DECLARACIONES -> epsilon

DECLARACION -> kw_proc id { PARAMETROS_DECL } { INSTRUCCIONES }

PARAMETROS_DECL -> PARAMETRO_DECL PARAMETROS_DECL
PARAMETROS_DECL -> epsilon

PARAMETRO_DECL -> { id }

INSTRUCCION -> kw_return OPT_EXPRESSION ;
INSTRUCCION -> kw_break ;
INSTRUCCION -> kw_continue ;
INSTRUCCION -> kw_puts PUTS ;
PUTS -> VARIABLE
PUTS -> INT_DOUBLE_STR
PUTS -> FCALL_CROCHETES

INSTRUCCION -> kw_set id OPT_ARRAY_ACCESS EXPRESSION ;

OPT_EXPRESSION -> epsilon
OPT_EXPRESSION -> VARIABLE
OPT_EXPRESSION -> INT_DOUBLE_STR
OPT_EXPRESSION -> FCALL_CROCHETES


EXP_EXPRESSION -> EXPRESSION
EXP_EXPRESSION -> EXP

INSTRUCCIONES -> INSTRUCCION INSTRUCCIONES
INSTRUCCIONES -> epsilon

INSTRUCCION -> kw_if IF ELSEIFS ELSE
IF -> { EXPRESSION } kw_then { INSTRUCCIONES }
ELSEIFS -> epsilon
ELSEIFS -> kw_elseif IF ELSEIFS
ELSE -> epsilon
ELSE -> kw_else { INSTRUCCIONES }

INST_SIN_PYC -> INST_CON_PYC
INSTRUCCION -> INST_CON_PYC ;

INST_CON_PYC -> GETS
INST_CON_PYC -> FCALL_CROCHETES
INST_CON_PYC -> ARRAY kw_array SIZE_OR_EXISTS id

ARRAY -> kw_array SIZE_OR_EXISTS id
GETS -> kw_gets kw_stdin

SIZE_OR_EXISTS -> kw_size
SIZE_OR_EXISTS -> kw_exists

INSTRUCCION -> kw_while { EXPRESSION } { INSTRUCCIONES }


EXP -> kw_expr { EXPRESSION }
INSTRUCCION -> kw_for { kw_set id INIT_FOR } { EXPRESSION } { kw_incr id OPT_INTEGER } { INSTRUCCIONES }
OPT_INTEGER -> epsilon
OPT_INTEGER -> ( token_integer )
OPT_INTEGER -> token_integer
INSTRUCCION -> kw_switch VARIABLE { CASES DEFAULT }

CASES -> epsilon
CASES -> CASE CASES

CASE -> kw_case token_integer { INSTRUCCIONES }

DEFAULT -> epsilon
DEFAULT -> kw_default { INSTRUCCIONES }

INIT_FOR -> token_integer
INIT_FOR -> VARIABLE
INIT_FOR -> EXP

OPT_ARRAY_ACCESS -> ( ARRAY_ACCESS )
OPT_ARRAY_ACCESS -> epsilon
ARRAY_ACCESS -> INT_DOUBLE_STR
ARRAY_ACCESS -> FCALL_CROCHETES

INT_DOUBLE_STR -> token_integer
INT_DOUBLE_STR -> token_double
INT_DOUBLE_STR -> token_string

EXPRESSION -> T E_BINARIA
E_BINARIA -> BINARIO1 T E_BINARIA
E_BINARIA -> epsilon
T -> V T_PRIMA
T_PRIMA -> BINARIO2 V T_PRIMA
T_PRIMA -> epsilon

V -> UNARIO V
V -> U

U -> ( EXPRESSION )
U -> VARIABLE
U -> token_string
U -> FCALL_CROCHETES

VARIABLE -> token_dollar id OPT_ARRAY_ACCESS

FCALL_CROCHETES -> [ CROCHETES ]

CROCHETES -> id PARAMETROS
CROCHETES -> ARRAY
CROCHETES -> EXP
CROCHETES -> GETS

U -> token_integer
U -> token_double

BINARIO1 -> token_mas
BINARIO1 -> token_menos
BINARIO2 -> token_mul
BINARIO2 -> token_div
BINARIO2 -> token_mod

BINARIO2 -> token_menor
BINARIO2 -> token_menor_igual
BINARIO2 -> token_mayor_igual
BINARIO2 -> token_mayor
BINARIO2 -> token_diff_num
BINARIO2 -> token_mul
BINARIO2 -> token_pot
BINARIO2 -> token_and
BINARIO2 -> token_or
BINARIO2 -> token_igual_num
BINARIO2 -> token_diff_str
BINARIO2 -> token_igual_str

UNARIO -> token_menos
UNARIO -> token_not


PARAMETROS -> epsilon
PARAMETROS -> PARAMETRO PARAMETROS

PARAMETRO -> { P_BODY }
P_BODY -> EXP
P_BODY -> VARIABLE
P_BODY -> FCALL_CROCHETES
P_BODY -> INT_DOUBLE_STR
